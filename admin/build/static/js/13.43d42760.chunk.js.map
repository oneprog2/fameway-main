{"version":3,"sources":["components/forms/custom-elements/CustomTextField.js","components/forms/custom-elements/CustomCheckbox.js","api/config.js","api/auth0.service.tsx","pages/authentication/Login.js"],"names":["CustomTextField","styled","props","theme","color","opacity","borderColor","palette","mode","backgroundColor","BpIcon","borderRadius","width","height","boxShadow","outline","outlineOffset","primary","background","BpCheckedIcon","display","backgroundImage","content","CustomCheckbox","bgcolor","Checkbox","disableRipple","checkedIcon","sx","icon","inputProps","AUTH0_REALM","auth","auth0","WebAuth","domain","clientID","scope","Login","navigation","useState","username","setUsername","email","setEmail","password","setPassword","showPassword","setShowPassword","loading","setLoading","loadingGoogle","signup","setSignup","forgetPassword","setForgetPassword","error","setError","handleSubmitLogin","e","login","realm","redirectUri","responseType","err","result","console","log","handleSubmitSignup","connection","Grid","container","justifyContent","xs","sm","md","lg","xl","item","alignItems","paddingTop","zIndex","borderTopRightRadius","borderBottomRightRadius","flexDirection","Box","onClick","window","location","href","cursor","top","left","position","marginBottom","style","src","spacing","p","size","Typography","fontWeight","variant","marginTop","mr","mt","InputProps","startAdornment","InputAdornment","onChange","target","value","id","placeholder","fullWidth","Button","disabled","pt","pb","CircularProgress","type","endAdornment","IconButton","edge","Visibility","VisibilityOff","mb","textAlign","align","fontSize","textDecoration","my","FormGroup","FormControlLabel","control","defaultChecked","label","ml","alignitems","justifycontent","borderWidth","grey","A200","component","padding","flex","marginLeft","backgroundPosition","backgroundRepeat","backgroundSize","layout"],"mappings":"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","file":"static/js/13.43d42760.chunk.js","sourcesContent":["import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst CustomTextField = styled((props) => <TextField {...props} />)(({ theme }) => ({\r\n  '& .MuiOutlinedInput-input::-webkit-input-placeholder': {\r\n    color: '#767e89',\r\n    opacity: '1',\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    borderColor: `${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.12)' : '#dee3e9'}`,\r\n  },\r\n  '& .MuiOutlinedInput-input.Mui-disabled': {\r\n    backgroundColor: `${theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.12) ' : '#f8f9fb '}`,\r\n  },\r\n  '& .MuiOutlinedInput-input.Mui-disabled::-webkit-input-placeholder': {\r\n    color: '#767e89',\r\n    opacity: '1',\r\n  },\r\n}));\r\n\r\nexport default CustomTextField;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BpIcon = styled('span')(({ theme }) => ({\r\n  borderRadius: 3,\r\n  width: 21,\r\n  height: 21,\r\n\r\n  boxShadow:\r\n    theme.palette.mode === 'dark'\r\n      ? '0 0 0 1px rgb(16 22 26 / 40%)'\r\n      : 'inset 0 0 0 1px rgba(0,0,0,.2)',\r\n  backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.4)' : '',\r\n\r\n  '.Mui-focusVisible &': {\r\n    outline: '0px auto rgba(19,124,189,.6)',\r\n    outlineOffset: 2,\r\n  },\r\n  'input:hover ~ &': {\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.primary : theme.palette.primary,\r\n  },\r\n  'input:disabled ~ &': {\r\n    boxShadow: 'none',\r\n    background: theme.palette.mode === 'dark' ? 'rgba(57,75,89,.5)' : 'rgba(206,217,224,.5)',\r\n  },\r\n}));\r\n\r\nconst BpCheckedIcon = styled(BpIcon)({\r\n  boxShadow: 'none',\r\n  width: 21,\r\n  height: 21,\r\n  '&:before': {\r\n    display: 'block',\r\n    width: 21,\r\n    height: 21,\r\n    backgroundImage:\r\n      \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n      \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n      \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n    content: '\"\"',\r\n  },\r\n});\r\n\r\n// Inspired by blueprintjs\r\nfunction CustomCheckbox({ bgcolor, ...props }) {\r\n  return (\r\n    <Checkbox\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={\r\n        <BpCheckedIcon\r\n          sx={{\r\n            backgroundColor: bgcolor || 'primary.main',\r\n          }}\r\n        />\r\n      }\r\n      icon={<BpIcon />}\r\n      inputProps={{ 'aria-label': 'Checkbox demo' }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nCustomCheckbox.propTypes = {\r\n  bgcolor: PropTypes.string,\r\n};\r\n\r\nexport default CustomCheckbox;\r\n","export const AUTH0_DOMAIN = \"dev-lzkir111o3ip75a0.us.auth0.com\";\nexport const AUTH0_CLIENT_ID = \"fvFanDY5XxF2Op7kITivNKSox5mv6e6M\";\nexport const AUTH0_LOGIN_REDIRECT_URI = \"admin.fameway.co\";\nexport const AUTH0_REALM = \"Username-Password-Authentication\";\nexport const AUTH0_USER_SCOPE = \"openid email profile\";\nexport const LOGIN_RESPONSE_TYPE = \"token\";\nexport const AUTH0_LOGOUT_URI = \"admin.fameway.co\";\n","import auth0 from \"auth0-js\";\nimport { AUTH0_CLIENT_ID, AUTH0_DOMAIN, AUTH0_USER_SCOPE } from \"./config\";\n\nexport const auth = new auth0.WebAuth({\n  domain: AUTH0_DOMAIN,\n  clientID: AUTH0_CLIENT_ID,\n  scope: AUTH0_USER_SCOPE,\n});\n","import React, { useState } from \"react\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Button,\n  InputAdornment,\n  IconButton,\n  CircularProgress,\n} from \"@mui/material\";\nimport FeatherIcon from \"feather-icons-react\";\n\nimport CustomCheckbox from \"../../../src/components/forms/custom-elements/CustomCheckbox\";\n\nimport CustomTextField from \"../../../src/components/forms/custom-elements/CustomTextField\";\n\nimport { VisibilityOff, Visibility } from \"@mui/icons-material\";\nimport { auth } from \"../../api/auth0.service\";\nimport {\n  AUTH0_LOGIN_REDIRECT_URI,\n  AUTH0_REALM,\n  LOGIN_RESPONSE_TYPE,\n} from \"../../api/config\";\n\nconst Login = ({ navigation }) => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState();\n  const [loading, setLoading] = useState(false);\n  const [loadingGoogle, setLoadingGoogle] = useState(false);\n  const [signup, setSignup] = useState(false);\n  const [forgetPassword, setForgetPassword] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleSubmitLogin = async (e) => {\n    setLoading(true);\n    try {\n      await auth.login(\n        {\n          email,\n          password,\n          realm: AUTH0_REALM,\n          redirectUri: \"localhost:3000\",\n          responseType: LOGIN_RESPONSE_TYPE,\n        },\n        (err, result) => {\n          if (err) {\n            console.log(\"err\");\n            setError(\"Wrong username or password\");\n            setLoading(false);\n            return;\n          }\n          console.log(\"Login done\");\n          console.log(result);\n        }\n      );\n    } catch (error) {\n      setError(\"Wrong username or password\");\n    }\n    setLoading(false);\n  };\n\n  // const handleSubmitLoginGoogle = async (e) => {\n  //\n  //   setLoadingGoogle(true);\n  //   try {\n  //     await loginWithGoogle();\n  //   } catch (error) {\n  //     setError(\"Failed to login with Google\");\n  //   }\n  //   setLoadingGoogle(false);\n  // };\n\n  const handleSubmitSignup = async (e) => {\n    setLoading(true);\n    try {\n      await auth.signup(\n        {\n          connection: AUTH0_REALM,\n          email,\n          password,\n        },\n        async (err, result) => {\n          if (err) {\n            setError(\"Failed to create an account\");\n            setLoading(false);\n            return err;\n          }\n          await handleSubmitLogin();\n        }\n      );\n    } catch (error) {\n      setError(\"Failed to create an account\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Grid\n      container\n      sx={{\n        height: \"100vh\",\n        width: \"100vw\",\n        justifyContent: \"center\",\n        backgroundColor: {\n          xs: \"white\",\n          sm: \"white\",\n          md: \"#222222\",\n          lg: \"#222222\",\n          xl: \"#222222\",\n        },\n      }}\n    >\n      <Grid\n        item\n        md={6}\n        lg={7}\n        display=\"flex\"\n        alignItems=\"center\"\n        sx={{\n          paddingTop: { xs: 10, sm: 0, md: 0, lg: 0 },\n          zIndex: 10,\n          borderTopRightRadius: { lg: 55, xl: 55, md: 55 },\n          borderBottomRightRadius: { lg: 55, xl: 55, md: 55 },\n          backgroundColor: \"white\",\n          flexDirection: {\n            xs: \"column\",\n            sm: \"row\",\n            md: \"row\",\n            lg: \"row\",\n            xl: \"row\",\n          },\n        }}\n      >\n        <Box\n          onClick={() => {\n            window.location.href = \"/\";\n          }}\n          sx={{\n            cursor: \"pointer\",\n            top: {\n              xs: 0,\n              sm: 30,\n              md: 30,\n              lg: 30,\n              xl: 30,\n            },\n            left: {\n              xs: 0,\n              sm: 30,\n              md: 30,\n              lg: 30,\n              xl: 30,\n            },\n            position: {\n              xs: \"relative\",\n              sm: \"absolute\",\n              md: \"absolute\",\n              lg: \"absolute\",\n              xl: \"absolute\",\n            },\n            marginBottom: { xs: 5 },\n            height: {\n              xs: \"80px\",\n              sm: \"50px\",\n              md: \"50px\",\n              lg: \"50px\",\n              xl: \"50px\",\n            },\n          }}\n        >\n          <img\n            style={{\n              height: \"100%\",\n            }}\n            src={\n              \"https://global-uploads.webflow.com/62f0c9ac63e2203fac4be612/62f0d831f9175953746e46b4_62dfe1b50e142ed34127e6c3_logo.svg\"\n            }\n          ></img>\n        </Box>\n\n        <Grid container spacing={0} display=\"flex\" justifyContent=\"center\">\n          <Grid item xs={12} lg={9} xl={6}>\n            {forgetPassword ? (\n              <Box\n                sx={{\n                  p: {\n                    xs: 4,\n                    sm: 10,\n                    md: 4,\n                    lg: 4,\n                    xl: 0,\n                  },\n                }}\n              >\n                <Box>\n                  <Box\n                    sx={{\n                      cursor: \"pointer\",\n                      width: 40,\n                    }}\n                    onClick={() => {\n                      setError(\"\");\n                      setForgetPassword(false);\n                    }}\n                  >\n                    <FeatherIcon\n                      color=\"primary\"\n                      size={40}\n                      icon={\"arrow-left-circle\"}\n                    />\n                  </Box>\n                </Box>\n\n                <Typography\n                  fontWeight=\"700\"\n                  variant=\"h1\"\n                  style={{ marginBottom: 10, marginTop: 10 }}\n                >\n                  Un petit oubli ?\n                </Typography>\n\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    fontWeight=\"500\"\n                    sx={{\n                      mr: 1,\n                    }}\n                  >\n                    Ça arrive même aux meilleurs d'entre nous.\n                  </Typography>\n                </Box>\n                <Box\n                  sx={{\n                    mt: 4,\n                  }}\n                >\n                  {/* <CustomFormLabel htmlFor=\"email\">Ton mail</CustomFormLabel> */}\n\n                  <CustomTextField\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <FeatherIcon size={20} icon={\"mail\"} />\n                        </InputAdornment>\n                      ),\n                    }}\n                    style={{\n                      backgroundColor: \"#f0f0f0\",\n                      borderRadius: 5,\n                    }}\n                    onChange={(e) => setEmail(e.target.value)}\n                    value={email}\n                    id=\"email\"\n                    placeholder={\"Email\"}\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    fullWidth\n                    disabled={loading || (!email && !password)}\n                    sx={{\n                      mt: 5,\n                      fontWeight: \"700\",\n                      borderRadius: \"100px\",\n                      pt: \"10px\",\n                      pb: \"10px\",\n                    }}\n                  >\n                    {loading ? (\n                      <CircularProgress size={25} />\n                    ) : (\n                      \"Envoyer un mail de réinitialisation\"\n                    )}\n                  </Button>\n                </Box>\n              </Box>\n            ) : (\n              <Box\n                sx={{\n                  p: {\n                    xs: 4,\n                    sm: 10,\n                    md: 4,\n                    lg: 4,\n                    xl: 0,\n                  },\n                }}\n              >\n                {signup ? (\n                  <Box>\n                    <Box\n                      sx={{\n                        cursor: \"pointer\",\n                        width: 40,\n                        marginBottom: 5,\n                      }}\n                      onClick={() => {\n                        setSignup(false);\n                      }}\n                    >\n                      <FeatherIcon\n                        color=\"primary\"\n                        size={40}\n                        icon={\"arrow-left-circle\"}\n                      />\n                    </Box>\n                  </Box>\n                ) : null}\n\n                <Typography\n                  fontWeight=\"700\"\n                  variant=\"h1\"\n                  style={{ marginBottom: 10 }}\n                >\n                  {!signup\n                    ? \"(Re) Bienvenue sur Fameway !\"\n                    : \"Crée ta boutique d’influence gratuite en quelques clics.\"}\n                </Typography>\n\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    fontWeight=\"500\"\n                    sx={{\n                      mr: 1,\n                    }}\n                  >\n                    {signup\n                      ? \"Vends ton contenu, boost tes revenus.\"\n                      : \"Connecte toi pour gérer ta boutique sécurisée.\"}\n                  </Typography>\n                </Box>\n                <Box\n                  sx={{\n                    mt: 4,\n                  }}\n                >\n                  {/* <CustomFormLabel htmlFor=\"email\">Ton mail</CustomFormLabel> */}\n                  {signup ? (\n                    <CustomTextField\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <FeatherIcon size={20} icon=\"user\" />\n                          </InputAdornment>\n                        ),\n                      }}\n                      style={{\n                        backgroundColor: \"#f0f0f0\",\n                        borderRadius: 5,\n                        marginBottom: 15,\n                      }}\n                      onChange={(e) => setUsername(e.target.value)}\n                      value={username}\n                      id=\"username\"\n                      placeholder=\"Nom de créateur\"\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  ) : null}\n\n                  <CustomTextField\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <FeatherIcon\n                            size={20}\n                            icon={signup ? \"mail\" : \"user\"}\n                          />\n                        </InputAdornment>\n                      ),\n                    }}\n                    style={{\n                      backgroundColor: \"#f0f0f0\",\n                      borderRadius: 5,\n                    }}\n                    onChange={(e) => setEmail(e.target.value)}\n                    value={email}\n                    id=\"email\"\n                    placeholder={signup ? \"Email\" : \"Email ou nom de créateur\"}\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n\n                  <>\n                    <CustomTextField\n                      style={{\n                        backgroundColor: \"#f0f0f0\",\n                        borderRadius: 5,\n                      }}\n                      type={showPassword ? \"text\" : \"password\"}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <FeatherIcon size={20} icon=\"lock\" />\n                          </InputAdornment>\n                        ),\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              disabled={loading}\n                              aria-label=\"toggle password visibility\"\n                              onClick={() => setShowPassword(!showPassword)}\n                              edge=\"end\"\n                            >\n                              {!showPassword ? (\n                                <VisibilityOff />\n                              ) : (\n                                <Visibility />\n                              )}\n                            </IconButton>\n                          </InputAdornment>\n                        ),\n                      }}\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      id=\"password\"\n                      variant=\"outlined\"\n                      fullWidth\n                      placeholder=\"Mot de passe\"\n                      sx={{\n                        mt: 2,\n                        mb: 3,\n                      }}\n                    />\n\n                    {error ? (\n                      <Box\n                        sx={{\n                          mb: 2,\n                          textAlign: \"center\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                        <Typography\n                          align=\"center\"\n                          color=\"red\"\n                          textAlign={\"center\"}\n                          variant=\"h6\"\n                          fontWeight=\"500\"\n                        >\n                          {error}\n                        </Typography>\n                      </Box>\n                    ) : null}\n\n                    {!signup ? (\n                      <Box\n                        sx={{\n                          display: {\n                            xs: \"block\",\n                            sm: \"flex\",\n                            lg: \"flex\",\n                          },\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <FormGroup>\n                          <FormControlLabel\n                            control={<CustomCheckbox defaultChecked />}\n                            label=\"Se souvenir de moi\"\n                            sx={{\n                              mb: 2,\n                            }}\n                          />\n                        </FormGroup>\n                        <Box\n                          onClick={() => {\n                            setError(\"\");\n                            setForgetPassword(true);\n                          }}\n                          sx={{\n                            ml: \"auto\",\n                          }}\n                        >\n                          <Typography\n                            fontWeight=\"500\"\n                            sx={{\n                              fontSize: \"14px\",\n                              display: \"block\",\n                              textDecoration: \"none\",\n                              mb: \"16px\",\n                              color: \"primary.main\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Mot de passe oublié ?\n                          </Typography>\n                        </Box>\n                      </Box>\n                    ) : (\n                      <Box\n                        onClick={() => {\n                          setError(\"\");\n                          setSignup(false);\n                        }}\n                      >\n                        <Typography\n                          fontWeight=\"500\"\n                          sx={{\n                            textAlign: \"right\",\n                            fontSize: \"14px\",\n                            display: \"block\",\n                            textDecoration: \"none\",\n                            my: 1,\n                            color: \"primary.main\",\n                            cursor: \"pointer\",\n                          }}\n                        >\n                          Tu as déjà une boutique ?\n                        </Typography>\n                      </Box>\n                    )}\n                  </>\n\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    fullWidth\n                    disabled={loading || (!email && !password)}\n                    sx={{\n                      mt: 3,\n                      fontWeight: \"700\",\n                      borderRadius: \"100px\",\n                      pt: \"10px\",\n                      pb: \"10px\",\n                    }}\n                    onClick={signup ? handleSubmitSignup : handleSubmitLogin}\n                  >\n                    {loading ? (\n                      <CircularProgress size={25} />\n                    ) : signup ? (\n                      \"Créer ma boutique\"\n                    ) : (\n                      \"Se connecter\"\n                    )}\n                  </Button>\n\n                  <Box>\n                    {!signup ? (\n                      <Button\n                        variant=\"outlined\"\n                        size=\"large\"\n                        display=\"flex\"\n                        alignitems=\"center\"\n                        justifycontent=\"center\"\n                        // onClick={handleSubmitLoginGoogle}\n                        sx={{\n                          borderRadius: \"100px\",\n                          width: \"100%\",\n                          borderColor: (theme) =>\n                            `${\n                              theme.palette.mode === \"dark\"\n                                ? \"#42464d\"\n                                : \"#dde3e8\"\n                            }`,\n                          borderWidth: \"2px\",\n                          textAlign: \"center\",\n                          mt: 2,\n                          pt: \"10px\",\n                          pb: \"10px\",\n                          \"&:hover\": {\n                            borderColor: (theme) =>\n                              `${\n                                theme.palette.mode === \"dark\"\n                                  ? \"#42464d\"\n                                  : \"#dde3e8\"\n                              }`,\n                            borderWidth: \"2px\",\n                          },\n                        }}\n                      >\n                        {loadingGoogle ? (\n                          <CircularProgress size={25} />\n                        ) : (\n                          <Box display=\"flex\" alignItems=\"center\">\n                            <img\n                              style={{ width: 25, height: 25 }}\n                              src={\n                                \"https://res.cloudinary.com/dgzpshsab/image/upload/v1673514918/google-logo-icon-png-transparent-background-osteopathy-16_xuuafj.png\"\n                              }\n                            ></img>\n                            <Typography\n                              variant=\"h6\"\n                              sx={{\n                                ml: 1,\n                                color: (theme) =>\n                                  `${\n                                    theme.palette.mode === \"dark\"\n                                      ? theme.palette.grey.A200\n                                      : \"#13152a\"\n                                  }`,\n                              }}\n                            >\n                              Me connecter avec Gmail\n                            </Typography>\n                          </Box>\n                        )}\n                      </Button>\n                    ) : null}\n                  </Box>\n\n                  <Box\n                    sx={{\n                      position: \"relative\",\n                      textAlign: \"center\",\n                      mt: \"30px\",\n                      mb: \"20px\",\n                      \"&::before\": {\n                        content: '\"\"',\n                        background: (theme) =>\n                          `${\n                            theme.palette.mode === \"dark\"\n                              ? \"#42464d\"\n                              : \"#ecf0f2\"\n                          }`,\n                        height: \"1px\",\n                        width: \"100%\",\n                        position: \"absolute\",\n                        left: \"0\",\n                        top: \"11px\",\n                      },\n                    }}\n                  >\n                    <Typography\n                      component=\"span\"\n                      color=\"textSecondary\"\n                      variant=\"h6\"\n                      fontWeight=\"400\"\n                      sx={{\n                        position: \"relative\",\n                        padding: \"0 12px\",\n                        background: (theme) =>\n                          `${\n                            theme.palette.mode === \"dark\"\n                              ? \"#282c34\"\n                              : \"#ffffff\"\n                          }`,\n                      }}\n                    >\n                      {signup ? \"OU\" : \"PAS DE COMPTE ?\"}\n                    </Typography>\n                  </Box>\n\n                  {!signup ? (\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"h4\"\n                        textAlign=\"center\"\n                        align=\"center\"\n                        position=\"center\"\n                        fontWeight=\"500\"\n                        sx={{\n                          flex: 1,\n                          mt: 2,\n                          mr: 1,\n                          mb: 2,\n                        }}\n                      >\n                        Tu as une communauté de +10k fans ?\n                      </Typography>\n                    </Box>\n                  ) : null}\n\n                  {!signup ? (\n                    <Box\n                      style={{\n                        marginTop: 17,\n                      }}\n                    >\n                      <Button\n                        onClick={() => {\n                          setError(\"\");\n                          setSignup(true);\n                        }}\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        disabled={loading}\n                        fullWidth\n                        sx={{\n                          fontWeight: \"700\",\n                          borderRadius: \"100px\",\n                          pt: \"10px\",\n                          pb: \"10px\",\n                        }}\n                      >\n                        {loading ? (\n                          <CircularProgress size={25} />\n                        ) : (\n                          \"Créer ma boutique\"\n                        )}\n                      </Button>\n                    </Box>\n                  ) : (\n                    <Button\n                      variant=\"outlined\"\n                      size=\"large\"\n                      display=\"flex\"\n                      alignitems=\"center\"\n                      justifycontent=\"center\"\n                      sx={{\n                        borderRadius: \"100px\",\n                        width: \"100%\",\n                        borderColor: (theme) =>\n                          `${\n                            theme.palette.mode === \"dark\"\n                              ? \"#42464d\"\n                              : \"#dde3e8\"\n                          }`,\n                        borderWidth: \"2px\",\n                        textAlign: \"center\",\n                        mt: 2,\n                        pt: \"10px\",\n                        pb: \"10px\",\n                        \"&:hover\": {\n                          borderColor: (theme) =>\n                            `${\n                              theme.palette.mode === \"dark\"\n                                ? \"#42464d\"\n                                : \"#dde3e8\"\n                            }`,\n                          borderWidth: \"2px\",\n                        },\n                      }}\n                    >\n                      {loadingGoogle ? (\n                        <CircularProgress size={25} />\n                      ) : (\n                        <Box display=\"flex\" alignItems=\"center\">\n                          <img\n                            style={{ width: 25, height: 25 }}\n                            src={\n                              \"https://res.cloudinary.com/dgzpshsab/image/upload/v1673514918/google-logo-icon-png-transparent-background-osteopathy-16_xuuafj.png\"\n                            }\n                          ></img>\n                          <Typography\n                            variant=\"h6\"\n                            sx={{\n                              ml: 1,\n                              color: (theme) =>\n                                `${\n                                  theme.palette.mode === \"dark\"\n                                    ? theme.palette.grey.A200\n                                    : \"#13152a\"\n                                }`,\n                            }}\n                          >\n                            Créer ma boutique avec Gmail\n                          </Typography>\n                        </Box>\n                      )}\n                    </Button>\n                  )}\n                </Box>\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid\n        item\n        md={6}\n        lg={5}\n        sx={{\n          display: { xs: \"none\", sm: \"none\", md: \"block\" },\n          background: (theme) =>\n            `${theme.palette.mode === \"dark\" ? \"#1c1f25\" : \"#222222\"}`,\n        }}\n      >\n        <Box\n          sx={{\n            marginLeft: -8,\n\n            backgroundImage:\n              \"url(https://res.cloudinary.com/dgzpshsab/image/upload/v1673514005/Stars_kw03wm.svg)\",\n            backgroundPosition: \"center\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n            height: \"100vh\",\n          }}\n        ></Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nLogin.layout = \"Blank\";\nexport default Login;\n"],"sourceRoot":""}